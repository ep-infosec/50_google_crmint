"""remove_notification_emails

Revision ID: 71caf3e9e2fb
Revises: 64e9670466d2
Create Date: 2022-11-20 14:53:44.689405

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '71caf3e9e2fb'
down_revision = '64e9670466d2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index(op.f('ix_enqueued_tasks_task_name'), 'enqueued_tasks', ['task_name'], unique=True)
    op.create_index(op.f('ix_enqueued_tasks_task_namespace'), 'enqueued_tasks', ['task_namespace'], unique=False)
    op.drop_constraint('jobs_ibfk_1', 'jobs', type_='foreignkey')
    op.create_foreign_key(None, 'jobs', 'pipelines', ['pipeline_id'], ['id'])
    op.drop_column('jobs', 'failed_workers_count')
    op.drop_column('jobs', 'succeeded_workers_count')
    op.drop_column('jobs', 'enqueued_workers_count')
    op.alter_column('params', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.drop_constraint('params_ibfk_2', 'params', type_='foreignkey')
    op.drop_constraint('params_ibfk_1', 'params', type_='foreignkey')
    op.create_foreign_key(None, 'params', 'pipelines', ['pipeline_id'], ['id'])
    op.create_foreign_key(None, 'params', 'jobs', ['job_id'], ['id'])
    op.drop_column('pipelines', 'emails_for_notifications')
    op.drop_constraint('schedules_ibfk_1', 'schedules', type_='foreignkey')
    op.create_foreign_key(None, 'schedules', 'pipelines', ['pipeline_id'], ['id'])
    op.drop_constraint('start_conditions_ibfk_2', 'start_conditions', type_='foreignkey')
    op.drop_constraint('start_conditions_ibfk_1', 'start_conditions', type_='foreignkey')
    op.create_foreign_key(None, 'start_conditions', 'jobs', ['job_id'], ['id'])
    op.create_foreign_key(None, 'start_conditions', 'jobs', ['preceding_job_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'start_conditions', type_='foreignkey')
    op.drop_constraint(None, 'start_conditions', type_='foreignkey')
    op.create_foreign_key('start_conditions_ibfk_1', 'start_conditions', 'jobs', ['job_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key('start_conditions_ibfk_2', 'start_conditions', 'jobs', ['preceding_job_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'schedules', type_='foreignkey')
    op.create_foreign_key('schedules_ibfk_1', 'schedules', 'pipelines', ['pipeline_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.add_column('pipelines', sa.Column('emails_for_notifications', mysql.VARCHAR(length=255), nullable=True))
    op.drop_constraint(None, 'params', type_='foreignkey')
    op.drop_constraint(None, 'params', type_='foreignkey')
    op.create_foreign_key('params_ibfk_1', 'params', 'jobs', ['job_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key('params_ibfk_2', 'params', 'pipelines', ['pipeline_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.alter_column('params', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.add_column('jobs', sa.Column('enqueued_workers_count', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
    op.add_column('jobs', sa.Column('succeeded_workers_count', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
    op.add_column('jobs', sa.Column('failed_workers_count', mysql.INTEGER(), server_default=sa.text("'0'"), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'jobs', type_='foreignkey')
    op.create_foreign_key('jobs_ibfk_1', 'jobs', 'pipelines', ['pipeline_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_index(op.f('ix_enqueued_tasks_task_namespace'), table_name='enqueued_tasks')
    op.drop_index(op.f('ix_enqueued_tasks_task_name'), table_name='enqueued_tasks')
    # ### end Alembic commands ###
